library("googledrive")
library("googlesheets4")
library("lubridate")
library("shinycssloaders")
library("shinyjs")
###il seguente codice va fatto girare sempre####________________________________
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
drive_auth()
gs4_auth(token = drive_token())
mydrive<-drive_find(type = "spreadsheet")
id<-filter(mydrive, mydrive$name == "mvs")
View(id)
mydrive
id<-filter(mydrive, mydrive$name == "MVS")
View(id)
dati<- read_sheet(id$id, col_types = "cidddd", sheet = 1)
View(dati)
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
View(dati)
rm(dati)
runApp('cc-mvs')
id<-filter(mydrive, mydrive$name == "MVS")
dati<- read_sheet(id$id, col_types = "cidddd", sheet = 1)
View(dati)
dati<- read_sheet(id$id, col_types = "cidddd", sheet = 1)
View(dati)
dati<- read_sheet(id$id, col_types = "cidddd", sheet = 1)
View(dati)
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
shiny::runApp('cc-mvs')
dati<- read_sheet(id$id, col_types = "cidddd", sheet = 1)
df <- dati
df$data<-dmy(df$data)
df<-mutate(df,anno=year(data))
df$anno<-as.Date((paste(df$anno,"-01","-01",sep="")))
df$anno<-substring(as.factor(df$anno),1,4)
dfx<-df %>%
mutate(X = DO_Cn) %>%
data.frame() %>%
mutate(R = abs(X-lag(X)))
meanx<-mean(dfx$X,na.rm=T)
xul<-mean(dfx$X, na.rm = T)+2.66*mean(dfx$R, na.rm=T)
xil<-mean(dfx$X, na.rm = T)-2.66*mean(dfx$R, na.rm=T)
xends<-max(dfx$piastra, na.rm=TRUE)
ggplotly(ggplot(dfx, aes(x = piastra, y = X)) + geom_point(size=0.3)+geom_line(linetype=1, size=0.2)+
geom_segment(aes(x=piastra,xend=xends,y=meanx,yend=meanx), color='blue', linetype=1,size=0.2)+
geom_segment(aes(x=piastra,xend=xends,y=xul,yend=xul), color='blue', linetype=1,size=0.2)+
geom_segment(aes(x=piastra,xend=xends,y=xil,yend=xil), color='blue', linetype=1,size=0.2)+
geom_text(aes(x = max(piastra, na.rm=TRUE)+10, y = meanx, label = paste("LC=", round(meanx,3))),size=3)+
geom_text(aes(x = max(piastra, na.rm=TRUE)+10, y = xul, label = paste("LSup=", round(xul,3))), size=3)+
geom_text(aes(x = max(piastra, na.rm=TRUE)+10, y = xil, label = paste("LInf=", round(xil,3))),size=3))
datiMVS<- read_sheet(id$id, col_types = "cidddd", sheet = "MVS")
View(datiMVS)
df <-  datiMVS %>%
select(data, piastra, X = "DO_Cn") %>%
mutate(data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X)))
df
meanx<-mean(df$X,na.rm=T)
xul<-mean(df$X, na.rm = T)+2.66*mean(df$R, na.rm=T)
xil<-mean(df$X, na.rm = T)-2.66*mean(df$R, na.rm=T)
xends<-max(df$piastra, na.rm=TRUE)
df
ggplotly(ggplot(df, aes(x = piastra, y = X)) + geom_point(size=0.3)+geom_line(linetype=1, size=0.2)+
geom_segment(aes(x=piastra,xend=xends,y=meanx,yend=meanx), color='blue', linetype=1,size=0.2)+
geom_segment(aes(x=piastra,xend=xends,y=xul,yend=xul), color='blue', linetype=1,size=0.2)+
geom_segment(aes(x=piastra,xend=xends,y=xil,yend=xil), color='blue', linetype=1,size=0.2)+
geom_text(aes(x = max(piastra, na.rm=TRUE)+10, y = meanx, label = paste("LC=", round(meanx,3))),size=3)+
geom_text(aes(x = max(piastra, na.rm=TRUE)+10, y = xul, label = paste("LSup=", round(xul,3))), size=3)+
geom_text(aes(x = max(piastra, na.rm=TRUE)+10, y = xil, label = paste("LInf=", round(xil,3))),size=3))
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
View(dati)
runApp('cc-mvs')
runApp('cc-mvs')
runApp('cc-mvs')
shiny::runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
shiny::runApp('SVILUPPO/cc-bergamo')
mid <- filter(mydrive, mydrive$name == "ccmicrobiologia")
View(mid)
micro <- read_sheet(mid$id, col_types = "cddc",  sheet = "Salmonella")
library("shiny")
library("datasets")
library("tidyverse")
library("plotly")
library("googledrive")
library("googlesheets4")
library("lubridate")
library("shinycssloaders")
library("shinyjs")
########################
# #IL CODICE SEGUENTE SI FA SOLO LA PRIMA VOLTA CHE SI ACCEDE AL DRIVE DI GOOGLE
# options(gargle_oauth_cache = ".secrets")
# gargle::gargle_oauth_cache()
# drive_auth()
# list.files(".secrets/")
###il seguente codice va fatto girare sempre####________________________________
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
drive_auth()
gs4_auth(token = drive_token())
mydrive <- drive_find(type = "spreadsheet")
sid <- filter(mydrive, mydrive$name == "bgccsierologia")
mid <- filter(mydrive, mydrive$name == "ccmicrobiologia")
micro <- read_sheet(mid$id, col_types = "cddc",  sheet = "Salmonella")
View(micro)
dfm <- micro  %>%
mutate(data = dmy(data),
anno = year(data),
R = abs(X-lag(X))) %>%
filter(anno==2019)
dfm
dfm <- micro  %>%
mutate(data = dmy(data),
anno = year(data),
R = abs(X-lag(X))) %>%
filter(anno==2020)
dfm
dfm <- micro  %>%
mutate(data = dmy(data),
anno = year(data),
R = abs(X-lag(X))) %>%
filter(anno==2021)
dfm
dfm <- micro  %>%
mutate(data = dmy(data),
anno = year(data),
R = abs(X-lag(X)))
dfm
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('D:/Dati/vito.tranquillo/Desktop/GitProjects/C_Charts/SVILUPPO/cc-bergamo')
runApp('D:/Dati/vito.tranquillo/Desktop/GitProjects/C_Charts/SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
library(shiny)
members <- data.frame(name=c("Name 1", "Name 2"), nr=c('BCRA1','FITM2'))
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
fluidRow(
column(6, selectInput("Member", label=h5("Choose a option"),choices=c('BCRA1','FITM2'))
))),
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
query <- members[which(members$nr==input$Member),2]
test <<- paste0("http://news.scibite.com/scibites/news.html?q=GENE$",query)
})
output$frame <- renderUI({
input$Member
my_test <- tags$iframe(src=test, height=600, width=535, frameborder = "no")
print(my_test)
my_test
})
}
shinyApp(ui, server)
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
shiny::runApp('SVILUPPO/cc-bergamo')
setwd("D:/Dati/vito.tranquillo/Desktop/GitProjects/C_Charts/SVILUPPO/cc-bergamo")
runApp()
shiny::runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
runApp('SVILUPPO/cc-bergamo')
library("shiny")
library("datasets")
library("tidyverse")
library("plotly")
library("googledrive")
library("googlesheets4")
library("lubridate")
library("shinycssloaders")
library("shinyjs")
#IL CODICE SEGUENTE SI FA SOLO LA PRIMA VOLTA CHE SI ACCEDE AL DRIVE DI GOOGLE
options(gargle_oauth_cache = ".secrets")
gargle::gargle_oauth_cache()
drive_auth()
list.files(".secrets/")
###il seguente codice va fatto girare sempre####________________________________
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
drive_auth()
gs4_auth(token = drive_token())
mydrive<-drive_find(type = "spreadsheet")
mydrive
id<-filter(mydrive, mydrive$name == "ccforli")
id
runApp('cc-forlì')
runApp('cc-forlì')
runApp('cc-forlì')
read_sheet(id$id, col_types = "cdccddc", sheet = "Influenza")
runApp('cc-forlì')
runApp('cc-forlì')
runApp('cc-forlì')
datiforli<-read_sheet(id$id, col_types = "cdccddc", sheet = "Influenza")
runApp('cc-forlì')
runApp('cc-forlì')
datiforli %>%
select(data, piastra, ct1, ct2) %>%
arrange(desc(piastra)) %>%
head(10)
runApp('cc-forlì')
runApp('cc-forlì')
datiforli %>%
select(data, piastra, ct1, ct2) %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>%
filter(anno==2020)
datiforli %>%
dplyr::select(data, piastra, ct1, ct2) %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>%
filter(anno==2020)
datiforli<-read_sheet(id$id, col_types = "cdccddc", sheet = "Influenza")
datiforli %>%
select(data, piastra, ct1, ct2) %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>%
filter(anno==2020)
datiforli %>%
select(data, piastra, ct1, ct2) %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>% View()
datiforli %>%
select(data, piastra, ct1, ct2) %>%
mutate(X = mean(ct1, ct2),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>%
filter(anno==2020)
datiforli %>%
select(data, piastra, ct1, ct2) %>%
mutate(X = mean(ct1, ct2),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>% View()
datiforli %>%
select(data, piastra, ct1, ct2)
datiforli %>%
select(data, piastra, ct1, ct2) %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>% View()
mean(datiforli$ct1, datiforli$ct2)
mean(c(datiforli$ct1, datiforli$ct2))
runApp('cc-forlì')
datiforli %>%
select(data, piastra, ct1, ct2) %>% rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>%
filter(anno==2020)
datiforli %>%
select(data, piastra, ct1, ct2) %>% rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>%
filter(anno=="2020")
datiforli %>%
select(data, piastra, ct1, ct2) %>% rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>% View()
datiforli %>%
select(data, piastra, ct1, ct2)
substring(as.factor(as.Date(year(datiforli$data),"-01","-01",sep="")), 1,4)
datiforli %>%
select(data, piastra, ct1, ct2) %>% rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4),
R = abs(X-lag(X))) %>% View()
datiforli %>%
select(data, piastra, ct1, ct2) %>% rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = year(data),
data.frame() %>%
R = abs(X-lag(X))) %>% View()
datiforli %>%
select(data, piastra, ct1, ct2) %>% rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = year(data)),
data.frame() %>%
mutate(R = abs(X-lag(X))) %>% View()
datiforli %>%
select(data, piastra, ct1, ct2) %>% rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = year(data)),
data.frame() %>% View()
datiforli %>%
&&)
datiforli %>%
))/&
datiforli %>%
///)
datiforli %>%
select(data, piastra, ct1, ct2) %>% rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = year(data),
data.frame() %>% View()
)
shiny::runApp('cc-forlì')
datiforli <- read_sheet(id$id, col_types = "cdccddc", sheet = influenza)
datiforli <- read_sheet(id$id, col_types = "cdccddc", sheet = "Influenza")
View(datiforli)
datiforli %>%
filter(anno==input$anno)%>%
rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4)
)
datiforli %>%
rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = substring(as.factor(as.Date(year(data),"-01","-01",sep="")), 1,4)) %>% View()
datiforli %>%
rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = year(data) %>% View()
R = abs(X-lag(X))) %>%
datiforli %>%
rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = year(data) %>% View()
R = abs(X-lag(X))) %>%
datiforli %>%
rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = year(data)) %>% View()
datiforli %>%
rowwise() %>%
mutate(X = mean(c(ct1, ct2)),
data = dmy(data),
anno = year(data)) %>%
data.frame() %>%
mutate(R = abs(X-lag(X))) %>% View()
runApp('cc-forlì')
library("shiny")
library("datasets")
library("tidyverse")
library("plotly")
library("googledrive")
library("googlesheets4")
library("lubridate")
library("shinycssloaders")
library("shinyjs")
###il seguente codice va fatto girare sempre####________________________________
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
drive_auth()
gs4_auth(token = drive_token())
mydrive<-drive_find(type = "spreadsheet")
id<-filter(mydrive, mydrive$name == "ccforli")
runApp('cc-forlì')
runApp('cc-forlì')
runApp('cc-forlì')
runApp()
runApp('cc-forlì')
runApp('cc-forlì')
runApp('cc-forlì')
shiny::runApp('cc-forlì')
shiny::runApp('cc-bergamo/Produzione/Ver 1.0 25_02_2021')
runApp('cc-bergamo/Produzione/Ver 1.0 25_02_2021')
runApp('cc-bergamo/Produzione/Ver 1.0 25_02_2021')
options(gargle_oauth_cache = ".secrets")
gargle::gargle_oauth_cache()
drive_auth()
list.files(".secrets/")
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
drive_auth()
gs4_auth(token = drive_token())
mydrive <- drive_find(type = "spreadsheet")
sid <- filter(mydrive, mydrive$name == "bgccsierologia")
mid <- filter(mydrive, mydrive$name == "ccmicrobiologia")
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
drive_auth()
gs4_auth(token = drive_token())
drive_find(type = "spreadsheet")
list.files(".secrets/")
drive_auth()
gs4_auth(token = drive_token())
drive_find(type = "spreadsheet")
shiny::runApp('cc-bergamo/Produzione/Ver 1.0 25_02_2021')
runApp('cc-forli')
library("shiny")
library("datasets")
library("tidyverse")
library("plotly")
library("googledrive")
library("googlesheets4")
library("lubridate")
library("shinycssloaders")
library("shinyjs")
options(gargle_oauth_cache = ".secrets")
gargle::gargle_oauth_cache()
drive_auth()
list.files(".secrets/")
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
drive_auth()
gs4_auth(token = drive_token())
mydrive <- drive_find(type = "spreadsheet")
options(gargle_oauth_cache = ".secrets")
gargle::gargle_oauth_cache()
drive_auth()
list.files(".secrets/")
library("shiny")
library("datasets")
library("tidyverse")
library("plotly")
library("googledrive")
library("googlesheets4")
library("lubridate")
library("shinycssloaders")
library("shinyjs")
options(gargle_oauth_cache = ".secrets")
gargle::gargle_oauth_cache()
drive_auth()
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
drive_auth()
gs4_auth(token = drive_token())
mydrive <- drive_find(type = "spreadsheet")
